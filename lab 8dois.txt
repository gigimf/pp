1-
/*Crie um programa que contenha um array de float contendo 10 elementos.Utilizando aritmética de ponteiro, imprima o endereço de cada posiçãodesse array.*/
#include <stdio.h>

int main() {
    float array[10] = {1.1, 2.7, 3.2, 4.5, 5.1, 6.9, 7.3, 8.7, 9.4, 12.5};
    float *ptr = array; // Ponteiro para o início do array

    for (int i = 0; i < 10; i++) {
        printf("Endereco do elemento %d: %p\n", i, ptr);
        ptr++; 
    }

    return 0;
}
2-
/*Crie um programa que contenha uma matriz de float contendo 3 linhas e 3colunas. Utilizando aritmética de ponteiro, imprima o endereço de cadaposição dessa matriz.*/
#include <stdio.h>

int main() {
    float matriz[3][3] = {
        {1.1, 1.2, 1.3},
        {2.1, 2.2, 2.3},
        {3.1, 3.2, 3.3}
    };
    float *ptr = &matriz[0][0]; 

    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            printf("Endereco do elemento [%d][%d]: %p\n", i, j, ptr);
            ptr++; 
        }
    }

    return 0;
}
3-
/*Crie um programa que contenha um array de inteiros contendo 5 elementos.Utilizando apenas aritmética de ponteiros, leia esse array do teclado eimprima o dobro de cada valor lido.*/
#include <stdio.h>

int main() {
    int array[5];
    int *ptr = array; 

    printf("Digite 5 inteiros:\n");

   
    for (int i = 0; i < 5; i++) {
        scanf("%d", ptr);
        ptr++; 
    }

    ptr = array; 

    printf("O dobro:\n");
    for (int i = 0; i < 5; i++) {
        printf("%d\n", *ptr * 2);
        ptr++; 
    }

    return 0;
}
4-
/*Crie um programa que contenha um array contendo 5 elementos inteiros.Leia esse array do teclado e imprima o endereço das posições contendovalores pares.*/
#include <stdio.h>

int main() {
    int array[5];
    int i;

    printf("Digite 5 inteiros:\n");


    for (i = 0; i < 5; i++) {
        scanf("%d", &array[i]);
    }

    printf("Enderecos das posicoes com valores pares:\n");

    
    for (i = 0; i < 5; i++) {
        if (array[i] % 2 == 0) {
            printf("%p\n", &array[i]);
        }
    }

    return 0;
}
5-
/*Elabore um programa que receba duas strings digitadas pelo usuário everifique se a segunda string ocorre dentro da primeira. Use aritmética deponteiros para acessar os caracteres das strings.*/
#include <stdio.h>

int stringContida(char *str1, char *str2) {
    char *p1, *p2, *p3;
    
    while (*str1) {
        p1 = str1;
        p2 = str2;
        
        while (*p1 && *p2 && *p1 == *p2) {
            p1++;
            p2++;
        }
        
        if (!*p2)
            return 1;
        
        str1++;
    }
    
    return 0;
}

int main() {
    char string1[100], string2[100];
    
    printf("Digite a primeira string: ");
    fgets(string1, sizeof(string1), stdin);
    
    printf("Digite a segunda string: ");
    fgets(string2, sizeof(string2), stdin);
    
    if (stringContida(string1, string2))
        printf("A segunda string ocorre dentro da primeira.\n");
    else
        printf("A segunda string nn ocorre dentro da primeira.\n");
    
    return 0;
}
6-
/*Elabore um programa que dado um array e um valor do mesmo tipo doarray, preencha os elementos de array com esse valor. Não utilize índicespara percorrer o array, apenas aritmética de ponteiros.*/
#include <stdio.h>

void preencherArray(int *array, int tamanho, int valor) {
    int *ptr = array;
    int *end = array + tamanho;

    while (ptr < end) {
        *ptr = valor;
        ptr++;
    }
}

int main() {
    int array[5];
    int valor;

    printf("Digite o valor para preencher o array: ");
    scanf("%d", &valor);

    preencherArray(array, sizeof(array) / sizeof(array[0]), valor);

    printf("Array preenchido:\n");
    for (int i = 0; i < sizeof(array) / sizeof(array[0]); i++) {
        printf("%d ", array[i]);
    }
    printf("\n");

    return 0;
}

7-
/*Escreva um programa que receba um array de inteiros com 10 elementosdigitados pelo usuário e encontre o menor (min) e o maior (max) elementodesse array. Utilize ponteiros tanto para acessar o array quanto para acessaras variáveis min e max, ou seja, são necessários pelo menos 3 ponteiros.*/
#include <stdio.h>

void encontrarMinMax(int *array, int tamanho, int *min, int *max) {
    int i;
    *min = *max = array[0];  

    for (i = 1; i < tamanho; i++) {
        if (array[i] < *min) {
            *min = array[i]; 
        }
        if (array[i] > *max) {
            *max = array[i];  
        }
    }
}

int main() {
    int array[10];
    int i;

    printf("Digite 10 números inteiros:\n");
    for (i = 0; i < 10; i++) {
        scanf("%d", &array[i]);
    }

    int min, max;
    encontrarMinMax(array, sizeof(array) / sizeof(int), &min, &max);

    printf("Menor elemento: %d\n", min);
    printf("Maior elemento: %d\n", max);

    return 0;
}

8-
/*Considere a seguinte declaração: int A, *B, **C, ***D; Escreva umprograma que leia a variável ‘A’ e calcule e exiba o dobro, o triplo e oquádruplo desse valor utilizando apenas os ponteiros B, C e D. O ponteiro Bdeve ser usada para calcular o dobro, C o triplo e D o quádruplo.*/
#include <stdio.h>

int main() {
    int A, *B, **C, ***D;

    printf("Digite um valor para A: ");
    scanf("%d", &A);

    B = &A;
    C = &B;
    D = &C;

    printf("Dobro: %d\n", *B * 2);
    printf("Triplo: %d\n", **C * 3);
    printf("Quadruplo: %d\n", ***D * 4);

    return 0;
}
